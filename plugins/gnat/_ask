#compdef ask

_ask() {
    local context curcontext="$curcontext" state line
    typeset -A opt_args

    local ret=1

    targets=(dotnet-windows e500v2-vx6-linux e500v2-vx6-solaris \
             e500v2-vx6-windows e500v2-vx6cert-solaris e500v2-vx6cert-windows \
             e500v2-wrslinux-linux ia64-hp_linux ia64-sgi_linux leon-elf-linux \
             leon-elf-windows leon3-elf-linux p55-elf-linux p55-elf-windows \
             ppc-aix ppc-elf-solaris ppc-elf-windows ppc-elinos-linux \
             ppc-linux ppc-lynx5-linux ppc-vx6-linux ppc-vx6-solaris \
             ppc-vx6-windows ppc-vx653-windows ppc-vx6cert-linux \
             ppc-vx6cert-windows ppc-vxw-solaris ppc-vxw-windows \
             ppc-wrslinux-linux sparc-solaris sparc64-solaris x86-elinos-linux \
             x86-linux x86-lynx5-linux x86-solaris x86-vx6-linux \
             x86-vx6-solaris x86-vx6-windows x86-windows x86_64-darwin \
             x86_64-linux x86_64-windows)

    mods=(acats-3 acats-4-gnatprove-baseline acats-4-spark acats-4 \
             acats-codepeer-baseline acats-codepeer-full acats-codepeer-slow \
             acats-gnat2xml acats-gnatemulator acats-gnattest \
             acats-gnattest_hash_test acats ace ajis alfatest alt-ergo apex \
             asis asistools atk aunit autoconf automake aws base-gnat binutils \
             cairo cathod-tools closure codepeer-bootstrap codepeer \
             compare_compiler compare_source_pkg compilercommon dejagnu \
             doctools dotnet dsa fixedbugs-alfatest fixedbugs-codepeer-full \
             fixedbugs-codepeer-slow fixedbugs-gnattest fixedbugs-scotest \
             fixedbugs florist fontconfig freetype fsf-testsuite-gcc gaia gcc \
             gdb gdbsim gdkpixbuf gettext glade glib gmon gmp gnat gnatbench \
             gnatcoll gnatcoverage gnatdashboard gnatdocs gnatemulator \
             gnatexamples gnatmem gnatpython gnatquilt gnatstack gnatutil \
             gnatvm gnomethemes gnsa gnu gobjintrospection gprbuild gprconfig \
             gps-gpl gsh gtk3 gtklib gtkplus harfbuzz hicoloricontheme infosys \
             init_source_package intltool ipstack java jstd jvm lab less \
             libbareboard libcroco libelf libexpat libffi libiconv libjpeg \
             libpng librsvg libunwind libxml2 m4 maven modeling mpc mpfr \
             newlib nodejs nsis ocaml ocamlgraph openssl pango phantomjs \
             pixman pkgconfig polyorb python python4gdb python4qm qmachine \
             ravenscar readline recompilablerts rts_zfp scotest spark \
             spark2014 stable-gnat stable-spark templates_parser valgrind \
             vms_staging vx6cert why3 win32ada wposix xmlada zfp_support zlib)

    act_prios=(0 1 2 3 4 5 6 7 8 9 A C D E G N P R T W Q)
    act_status=(open dead fixed hold large no-ms)

    _arguments -C \
        '(- : *)'{-h,--help}'[display help information]' \
        '(- : *)'{-v,--verbose}'[add some verbosity for debugging purposes]' \
        '(--nocolor)'--nocolor'[disable colors in log outputs]' \
        '(--version)'--version'[show version and exit]' \
        '1: :_ask_cmds' \
        '*::arg:->args' \
    && ret=0

    case $state in
        (args)
            curcontext="{$curcontext%:*:*}:ask-cmd-$words[1]:"
            case $line[1] in
                (wf)
                    _arguments \
                        '(- : *)'{-h,--help}'[display help information]' \
                        '(-f --force)'{-f,--force}'[bypass package restriction]' \
                        '(-i --interactive)'{-i,--interactive}'[ask for user input]' \
                        '--latest[try with the day before until success]' \
                        '--date=[select the wavefront age]' \
                        '--arch=[select the target architecture]:($targets)' \
                        '--user=[select the username to use for ssh calls]:_users' \
                        '--server=[select the server to use for ssh calls]:_hosts' \
                        '*:MODULE_NAME:($mods)'
                    ;;
                (list)
                    _arguments \
                        '(- : *)'{-h,--help}'[display help information]' \
                        '--proxy=[proxy used for the request]' \
                        '(-p --prio)'{-p,--prio=}'[filter TN by priorities (comma separated list)]:($act_prios)' \
                        '1:USERNAME:_users'
                    ;;
                (info|open|mail|subscribe|unsubscribe)
                    _arguments \
                        '(- : *)'{-h,--help}'[display help information]' \
                        '1:TN:($tn)'
                    ;;
                (move)
                    _arguments \
                        '(- : *)'{-h,--help}'[display help information]' \
                        '(-m --message)'{-m,--message=}'[changelog message]' \
                        '1:TN:($tn)' \
                        '2:STATUS:($act_status)'
                    ;;
                (close|close)
                    _arguments \
                        '(- : *)'{-h,--help}'[display help information]' \
                        '(-m --message)'{-m,--message=}'[changelog message]' \
                        '1:TN:($tn)'
                    ;;
                (prio)
                    _arguments \
                        '(- : *)'{-h,--help}'[display help information]' \
                        '(-m --message)'{-m,--message=}'[changelog message]' \
                        '1:TN:($tn)' \
                        '2:PRIO:($act_prios)'
                    ;;
                *)
                    _call_function ret _ask_cmd_$words[1] && ret=0
                    (( ret )) && _message 'no more arguments'
                    ;;
            esac
            ;;
    esac
}

_ask_cmds() {
    local commands; commands=(
        'wf:retrieve and install the selected wavefront binaries'
        "list:list user's TNs"
        'info: display TN info'
        'open: open CRM page for TN'
        'mail: open the comment file for TN'
        'subscribe: subscribe to TN notifications'
        'unsubscribe: unsubscribe to TN notifications'
        'move: change the status of TN'
        'close: move TN to dead'
        'hold: move TN to hold'
        'prio: change the priority of TN'
        'help: display help information'
    )
    _describe -t commands 'command' commands "$@"
}

_ask "$@"
